// <auto-generated />
using System;
using Domain.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.ExternalStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UniverSity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExternalStudents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb"),
                            FirstName = "Mohammad",
                            LastName = "Jafary",
                            UniverSity = "IT for Idiots, Inc"
                        });
                });

            modelBuilder.Entity("Domain.Entities.InCampusStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("InitialTuitionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<bool>("MinimumScholarShipGiven")
                        .HasColumnType("bit");

                    b.Property<int>("YearsOfStudy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InCampusStudents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb"),
                            FirstName = "Ali",
                            InitialTuitionFee = 200000m,
                            LastName = "Kolahdoozan",
                            Level = 2,
                            MinimumScholarShipGiven = false,
                            YearsOfStudy = 6
                        },
                        new
                        {
                            Id = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f"),
                            FirstName = "Arash",
                            InitialTuitionFee = 150000m,
                            LastName = "Layazi",
                            Level = 1,
                            MinimumScholarShipGiven = true,
                            YearsOfStudy = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37e03ca7-c730-4351-834c-b66f280cdb01"),
                            IsNew = false,
                            Title = "University Introduction"
                        },
                        new
                        {
                            Id = new Guid("1fd115cf-f44c-4982-86bc-a8fe2e4ff83e"),
                            IsNew = false,
                            Title = "Respecting Your Classmates"
                        },
                        new
                        {
                            Id = new Guid("844e14ce-c055-49e9-9610-855669c9859b"),
                            IsNew = false,
                            Title = "Dealing with Clients 101"
                        },
                        new
                        {
                            Id = new Guid("d6e0e4b7-9365-4332-9b29-bb7bf09664a6"),
                            IsNew = false,
                            Title = "Headache with Python - Advanced"
                        },
                        new
                        {
                            Id = new Guid("cbf6db3b-c4ee-46aa-9457-5fa8aefef33a"),
                            IsNew = false,
                            Title = "Management 101"
                        });
                });

            modelBuilder.Entity("InCampusStudentLesson", b =>
                {
                    b.Property<Guid>("AttendedLessonsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentsThatAttendedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttendedLessonsId", "StudentsThatAttendedId");

                    b.HasIndex("StudentsThatAttendedId");

                    b.ToTable("LessonInCampusStudent", (string)null);

                    b.HasData(
                        new
                        {
                            AttendedLessonsId = new Guid("37e03ca7-c730-4351-834c-b66f280cdb01"),
                            StudentsThatAttendedId = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb")
                        },
                        new
                        {
                            AttendedLessonsId = new Guid("1fd115cf-f44c-4982-86bc-a8fe2e4ff83e"),
                            StudentsThatAttendedId = new Guid("72f2f5fe-e50c-4966-8420-d50258aefdcb")
                        },
                        new
                        {
                            AttendedLessonsId = new Guid("37e03ca7-c730-4351-834c-b66f280cdb01"),
                            StudentsThatAttendedId = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f")
                        },
                        new
                        {
                            AttendedLessonsId = new Guid("1fd115cf-f44c-4982-86bc-a8fe2e4ff83e"),
                            StudentsThatAttendedId = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f")
                        },
                        new
                        {
                            AttendedLessonsId = new Guid("844e14ce-c055-49e9-9610-855669c9859b"),
                            StudentsThatAttendedId = new Guid("f484ad8f-78fd-46d1-9f87-bbb1e676e37f")
                        });
                });

            modelBuilder.Entity("InCampusStudentLesson", b =>
                {
                    b.HasOne("Domain.Entities.Lesson", null)
                        .WithMany()
                        .HasForeignKey("AttendedLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.InCampusStudent", null)
                        .WithMany()
                        .HasForeignKey("StudentsThatAttendedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
